version: 0.1             
component: build
timeoutInSeconds: 5000
shell: bash
env:
  exportedVariables:
steps:
  - type: Command
    command: | 
      oci ce cluster create-kubeconfig --cluster-id ocid1.cluster.oc1.eu-amsterdam-1.aaaaaaaavc2hy67ng5aiotgium73omr5hjhvjanmw7mwel2e6cxqmdf6qtcq --file kconfig --region eu-amsterdam-1 --token-version 2.0.0  --kube-endpoint PUBLIC_ENDPOINT
  - type: Command
    command: |
      chmod +x ./kubectl
      export KUBECONFIG="kconfig"
      export meshdemo_version=meshdemo-v14
      sed -i "s/meshdemo_version/${meshdemo_version}/g" vault.yaml
      sed -i "s/meshdemo_version/${meshdemo_version}/g" secret.yaml
      sed -i "s/meshdemo_version/${meshdemo_version}/g" app.yaml
      sed -i "s/meshdemo_version/${meshdemo_version}/g" meshify-app.yaml
      sed -i "s/meshdemo_version/${meshdemo_version}/g" bind-app.yaml
      ./kubectl create namespace $meshdemo_version
      ./kubectl create -f vault.yaml
      ./kubectl create -f secret.yaml
      ./kubectl label namespace $meshdemo_version servicemesh.oci.oracle.com/sidecar-injection=enabled
      ./kubectl create -f app.yaml
      sleep 120
      ./kubectl create -f meshify-app.yaml
      ./kubectl create -f bind-app.yaml
  - type: Command
    command: |
      chmod +x ./kubectl
      export KUBECONFIG="kconfig"
      export meshdemo_previous_version_to_delete=meshdemo-v13
      if [ -n "${meshdemo_previous_version_to_delete}" ]; then
        ./kubectl delete ns $meshdemo_previous_version_to_delete &
        sleep 120
        ./kubectl get namespace $meshdemo_previous_version_to_delete -o json > out.json                          
        sed -i 's/"kubernetes"//g' ./out.json                                                              
        ./kubectl replace --raw "/api/v1/namespaces/${meshdemo_previous_version_to_delete}/finalize" -f ./out.json 
        # delete Mesh from Cloud UI manually
      fi