version: 0.1             
component: build
timeoutInSeconds: 5000
shell: bash
env:
  exportedVariables:
steps:
  - type: Command
    command: |
      yum -y install jq
      export docker_pass=$(oci secrets secret-bundle get --secret-id ${secret_ocid} --query "data.\"secret-bundle-content\".content" | tr -d '"' | base64 -d)
      export password=$(oci secrets secret-bundle get --secret-id ${secret_atp_ocid} --query "data.\"secret-bundle-content\".content" | tr -d '"' | base64 -d)
      docker login ${docker_registry} -u ${docker_user} -p ${docker_pass}
      # Generate Mesh name dynamically
      export version=`echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-6 | rev`
      echo "Version: ${version}"
      export meshdemo_version=$(oci service-mesh mesh list --compartment-id ${compartment_ocid} --all | jq '.data.items[] | select(."lifecycle-state" == "ACTIVE") | ."display-name"' | tr -d '"')
      if [ -n "${meshdemo_version}" ]; then
          echo "Mesh: ${meshdemo_version}"
          chmod +x ./kubectl
          oci ce cluster create-kubeconfig --cluster-id ${oke_ocid} --file kconfig --region ${oke_region} --token-version 2.0.0  --kube-endpoint PUBLIC_ENDPOINT
          export KUBECONFIG="kconfig"
          # BUILD PRICE v1 
          sed -i "s/atp_pwd/${password}/g" ./price/price.js
          sed -i "s/meshdemo_dbname/${dbname}/g" ./price/price.js
          mkdir -p ./price/Wallet
          ./kubectl get secret wallet -n ${meshdemo_version} -o jsonpath='{.data}' | jq '."tnsnames.ora"' | tr -d '"' | base64 --decode > ./price/Wallet/tnsnames.ora
          ./kubectl get secret wallet -n ${meshdemo_version} -o jsonpath='{.data}' | jq '."sqlnet.ora"' | tr -d '"' | base64 --decode > ./price/Wallet/sqlnet.ora
          ./kubectl get secret wallet -n ${meshdemo_version} -o jsonpath='{.data}' | jq '."cwallet.sso"' | tr -d '"' | base64 --decode > ./price/Wallet/cwallet.sso
          sed -i "s|"?/network/admin"|"./Wallet"|g" ./price/Wallet/sqlnet.ora
          export atp_link=$(grep -oP '(?<=service_name=)[^_]*' ./price/Wallet/tnsnames.ora | echo "https://$(head -n 1)-${dbname}.adb.${oke_region}.oraclecloudapps.com/ords/r/priceadmin/price-admin/login")
          echo "ATP admin link: ${atp_link}" 
          cd ./price/Wallet
          zip ./Wallet.zip *
          cd ../..
          mkdir ./Wallet
          mv ./price/Wallet/Wallet.zip ./Wallet/.
          cd ./price/
          wget ${instant_client} -q
          docker build -t ${docker_registry}/meshdemo-pricesvc:v1-${version} .
          docker push ${docker_registry}/meshdemo-pricesvc:v1-${version}
          cd ..
          # BUILD HOME v1 - STATIC
          cd ./home/
          cp ./html/pricing/index_static.html ./html/pricing/index.html
          docker build -t ${docker_registry}/meshdemo-homesvc:v1-${version} .
          docker push ${docker_registry}/meshdemo-homesvc:v1-${version}
          # BUILD HOME v2 - DYNAMIC 
          sed -i "s|atp_link|${atp_link}|g" ./html/pricing/index_dynamic.html
          cp ./html/pricing/index_dynamic.html ./html/pricing/index.html
          docker build -t ${docker_registry}/meshdemo-homesvc:v2-${version} .
          docker push ${docker_registry}/meshdemo-homesvc:v2-${version}
          cd ..
          sed -i "s/tag/${version}/g" app.yaml
          sed -i "s/meshdemo_version/${meshdemo_version}/g" app.yaml
          sed -i "s|meshdemo_registry|${docker_registry}|g" app.yaml
          sed -i "s/tag/${version}/g" app.yaml
          ./kubectl delete deployment home-v1 -n $meshdemo_version
          ./kubectl delete deployment home-v2 -n $meshdemo_version
          ./kubectl delete deployment price-v1 -n $meshdemo_version
          ./kubectl create -f app.yaml &
      fi