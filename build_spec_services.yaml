version: 0.1             
component: build
timeoutInSeconds: 5000
shell: bash
env:
  exportedVariables:
steps:
  - type: Command
    command: |
      export docker_pass=$(oci secrets secret-bundle get --secret-id ocid1.vaultsecret.oc1.eu-amsterdam-1.amaaaaaauevftmqa2vodnotrpnxe2lutj2foenstze5gzpuxyswnrnrworga --query "data.\"secret-bundle-content\".content" | tr -d '"' | base64 -d)
      docker login ams.ocir.io -u 'frsxwtjslf35/oracleidentitycloudservice/mika.rinne@oracle.com' -p ${docker_pass}
      # Generate Mesh name dynamically
      export version=`echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-6 | rev`
      echo "Version: ${version}"
      export meshdemo_version=$(oci service-mesh mesh list --compartment-id ocid1.compartment.oc1..aaaaaaaabwqnkg5r4sgb72edair3gaxqckws6p2qgxlyq67mnnqxvntwm4vq --all | jq '.data.items[] | select(."lifecycle-state" == "ACTIVE") | .id' | tr -d '"')
      if [ -n "${meshdemo_version}" ]; then
          # BUILD HOME v1 - STATIC
          cd ./home/
          cp ./html/pricing/index_static.html ./html/pricing/index.html
          docker build -t ams.ocir.io/frsxwtjslf35/meshdemo-homesvc:v1-${version} .
          docker push ams.ocir.io/frsxwtjslf35/meshdemo-homesvc:v1-${version}
          # BUILD HOME v2 - DYNAMIC 
          cp ./html/pricing/index_dynamic.html ./html/pricing/index.html
          docker build -t ams.ocir.io/frsxwtjslf35/meshdemo-homesvc:v2-${version} .
          docker push ams.ocir.io/frsxwtjslf35/meshdemo-homesvc:v2-${version}
          # BUILD PRICE v1 
          cd ../price/
          docker build -t ams.ocir.io/frsxwtjslf35/meshdemo-pricesvc:v1-${version} .
          docker push ams.ocir.io/frsxwtjslf35/meshdemo-pricesvc:v1-${version}
          oci ce cluster create-kubeconfig --cluster-id ocid1.cluster.oc1.eu-amsterdam-1.aaaaaaaasljp3fqfq5pt32nnic5qs4njo45dmtaanwq2ccxnyckxcyljtn7q --file kconfig --region eu-amsterdam-1 --token-version 2.0.0  --kube-endpoint PUBLIC_ENDPOINT
          sed -i "s/tag/${version}/g" app.yaml
          sed -i "s/meshdemo_version/${meshdemo_version}/g" app.yaml
          sed -i "s/tag/${version}/g" app.yaml
          chmod +x ./kubectl
          export KUBECONFIG="kconfig"
          ./kubectl delete deployment home-v1 -n $meshdemo_version
          ./kubectl delete deployment home-v2 -n $meshdemo_version
          ./kubectl delete deployment price-v1 -n $meshdemo_version
          ./kubectl create -f app.yaml &
      fi
